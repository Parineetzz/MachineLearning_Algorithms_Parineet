# -*- coding: utf-8 -*-
"""2_decision_tree.py

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Ual-qZ7li1_HavJvh3J8KFe7_tcH-3KG
"""

# Decision Tree on Titanic dataset
# This script loads Titanic data, preprocesses it using pandas, trains a Decision Tree, and evaluates accuracy

import seaborn as sns
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.tree import DecisionTreeClassifier
from sklearn.metrics import accuracy_score

# Load Titanic dataset from seaborn
df = sns.load_dataset('titanic')

# Drop rows with missing values in relevant columns
df = df.dropna(subset=['embarked', 'sex', 'age', 'fare', 'survived'])

# Fix: Make a deep copy to avoid SettingWithCopyWarning
df = df.copy()

# Convert categorical columns to numeric
df['sex'] = df['sex'].map({'male': 0, 'female': 1})
df['embarked'] = df['embarked'].map({'S': 0, 'C': 1, 'Q': 2})

# Select features and target
X = df[['pclass', 'sex', 'age', 'fare', 'embarked']]
Y = df['survived']

# Show first 5 rows of data (for preview)
print("Sample Data Preview:")
print(df.head())

# Split into training and testing sets (50% each)
X_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.5, random_state=22)

# Initialize and train the Decision Tree model
model = DecisionTreeClassifier()
model.fit(X_train, Y_train)

# Predict on the test data
Y_pred = model.predict(X_test)

# Evaluate the model
accuracy = accuracy_score(Y_test, Y_pred)
print("Accuracy of Decision Tree on Titanic dataset:", accuracy)

