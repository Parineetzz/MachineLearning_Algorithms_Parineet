# -*- coding: utf-8 -*-
"""1_logistic_regression.py

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1gAN9L1hAG8CXLyvyAw71y3D6k4jA-577
"""

# Logistic Regression on Iris dataset with pandas and bar graph visualization

import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.datasets import load_iris
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score

# Load the Iris dataset
iris = load_iris()

# Convert to pandas DataFrame
df = pd.DataFrame(data=iris.data, columns=iris.feature_names)
df['target'] = iris.target
df['target_name'] = df['target'].map({0: 'setosa', 1: 'versicolor', 2: 'virginica'})

# Show sample data
print("Sample Data Preview:")
print(df.head())

# Feature matrix and labels
X = df.drop(['target', 'target_name'], axis=1)
y = df['target']

# Split data
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Train model
model = LogisticRegression(max_iter=150)
model.fit(X_train, y_train)

# Predict
y_pred = model.predict(X_test)

# Evaluate
accuracy = accuracy_score(y_test, y_pred)
print("Accuracy of Logistic Regression on Iris dataset:", accuracy)

#Bar graph

plt.figure(figsize=(6, 4))
sns.countplot(x=y_pred, palette='Set2')
plt.title('Predicted Class Distribution')
plt.xlabel('Predicted Class')
plt.xticks(ticks=[0, 1, 2], labels=iris.target_names)
plt.tight_layout()
plt.show()

